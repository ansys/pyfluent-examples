
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/Excel-Monitor-Points/excelCustomization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_Excel-Monitor-Points_excelCustomization.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_Excel-Monitor-Points_excelCustomization.py:


Excel-Monitor-Points
====================
These examples show you how you can use Fluent capabilities from Python to perform
Fluent simulations. This includes geometry import, Fluent's meshing workflows,
setting up and running the solver, and reviewing the results using Fluent's
postprocessing capabilities.

.. GENERATED FROM PYTHON SOURCE LINES 9-70

.. code-block:: default


    # Load Settings from Excel Spreadsheet
    # Import modules
    # get_ipython().run_line_magic('matplotlib', 'inline')
    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    import_case_filename = examples.download_file(
        "glycerol_filling_mixing_init.cas.h5",
        "pyfluent/examples/Excel-Monitor-Points",
    )  # noqa: E501

    import_data_filename = examples.download_file(
        "glycerol_filling_mixing_init.dat.h5",
        "pyfluent/examples/Excel-Monitor-Points",
    )  # noqa: E501


    # sphinx_gallery_thumbnail_number = -5
    from ansys.fluent.visualization import set_config

    # from ansys.fluent.visualization.matplotlib import Plots
    from ansys.fluent.visualization.pyvista import Graphics
    import pandas as pd

    set_config(blocking=True, set_view_on_display="isometric")

    # Import Excel Into Notebook
    dataset = pd.read_excel("Setup.xlsx")

    # Convert Columns Into Variables
    listNames = dataset["Monitor Name"]
    listCoordX = dataset["X"]
    listCoordY = dataset["Y"]
    listCoordZ = dataset["Z"]

    # Launch fluent
    session = pyfluent.launch_fluent()

    # Set server status
    session.check_health()

    # Read case file
    session.tui.file.read_case(import_case_filename)

    # Read case data
    session.tui.file.read_data(import_data_filename)

    # Display tank slice
    graphics = Graphics(session=session)
    tankSlice = graphics.Meshes["tank-slice"]
    tankSlice.show_edges = True
    tankSlice.surfaces_list = ["tank-slice"]
    tankSlice.display("window-1")

    # Display contour
    graphics_session = Graphics(session)
    contourVF = graphics_session.Contours["contour-vf"]
    contourVF.field = "liquid-vof"
    contourVF.surfaces_list = ["tank-slice"]
    contourVF.display("window-2")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_Excel-Monitor-Points_excelCustomization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: excelCustomization.py <excelCustomization.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: excelCustomization.ipynb <excelCustomization.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
